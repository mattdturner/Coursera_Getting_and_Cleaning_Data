source("complete.R")
complete("specdata",1:15)
source("complete.R")
complete("specdata",1:15)
source("complete.R")
complete("specdata",1:15)
complete("specdata",30:25)
source("complete.R")
complete("specdata",30:25)
source("complete.R")
complete("specdata",30:25)
df <- complete("specdata",30:25)
df[order(30:25)]
source("corr.R",150)
source("corr.R")
corr("specdata",150)
source("corr.R")
corr("specdata",150)
?cor
source("corr.R")
corr("specdata",150)
source("corr.R")
df = corr("specdata",150)
head(df)
df[df$ID==1]
df[df$ID==1,]
df[df$ID==1,]$sulfate
source("corr.R")
cr <- corr("specdata",150)
head(cr)
summary(cr)
cr <- corr("specdata",400)
head(cr)
summary(cr)
cr <- corr("specdata",5000)
summary(cr)
cr
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source ("pollutantmean.R")
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","nitrate",70:72)
pollutantmean("specdata","sulfate",34)
pollutantmean("specdata","nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
use
cc
use
cc[304,"nobs"]
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
use
cc
use
swirl()
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags9,19:23]
flag_shapes <- flags[],19:23]
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
tabls(flags$landmass)
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)
data(iris)
?iris
sapply(iris$Sepal.Width,mean)
iris$Species
tapply(iris$Sepal.Width,iris$Species,mean)
colmeans(iris)
colMeans(iris)
apply(iris[,1:4],2,mean)
apply(iris,1,mean)
apply(iris,2,mean)
apply(iris[,1:4],1,mean)
rowMeans(iris[,1:4])
data(mtcars)
lapply(mtcars,mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
with(mtcars,tapply(mpg,cyl,mean))
apply(mtcars,2,mean)
mean(mtcars$mpg,mtcars$cyl)
tapply(mtcars$cyl,mtcars$mpg,mean)
sapply(mtcars,cyl,mpg)
sapply(mtcars,cyl,mean)
split(mtcars,mtcars$cyl)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
tapply(mtcars$hp,mtcars$cyl)
tapply(mtcars$hp,mtcars$cyl,mean)
hp_mean <- tapply(mtcars$hp,mtcars$cyl,mean)
hp_mean
hp_mean$`8` - hp_mean`4`
hp_mean$`8` - hp_mean$`4`
hp_mean[['8']]
hp_mean[['8']] - hp_mean[['4']]
debug(ls)
ls
ls()
exit
quit
exit*()
exit()
quit()
tapply(iris$Sepal.Length,iris$Species,mean)
ls()
tapply
tapply(iris$Sepal.Length,iris$Species,mean)
library(swirl)
swirl()
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
read.csv(path2csv,stringsAsFactors = FALSE)
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,package,country)
select(cran,5:20)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran,country=="US"|country=="IN")
filter(cran,size>100500 & r_os=="linux-gnu")
filter(cran,size>100500, r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
crans2 <- select(cran,size:ip_id)
cran2 <- select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb = size/2^20)
mutate(cran3,size_mb = size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
tbl_df()
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran,package)
by_package
summarize(by_package,mean(size))
submit()
tbl
pack_sum
quantile(pack_sum$count,probs=0.99)
top_counts <- filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts,count)
top_counts_sorted <- arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,probs=0.99)
top_unique <- filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(studetns,sex,count,-grade)
gather(students,sex,count,-grade)
students2
res <- gather(students2,sex_class,count)
res <- gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class,c("sex","class"))
submit()
students
students3
submit()
?spread
submit()
submit()
submit()
extract_numeric("class5")
?mutate
students3
mutate(students3,class1=extract_numeric(class1))
mutate(students3,extract_numeric(class1))
submit()
students4
submit()
submit()
?unique
submit()
submit()
passed
failed
mutate(passed,status="passed")
passed <- mutate(passed,status="passed")
failed <- mutate(failed,status="failed")
?bind_rows
bind_rows(passed,failed)
sa
sat
?separate
submit()
submit()
setwd("../Getting_And_Cleaning_Data/")
list.files
files.list
list.files()
setwd("week3")
acs <- read.csv(acs2006.csv)
source('~/Desktop/School/Coursera/Getting_And_Cleaning_Data/week3/week3_quiz.R')
source('~/Desktop/School/Coursera/Getting_And_Cleaning_Data/week3/week3_quiz.R')
source('~/Desktop/School/Coursera/Getting_And_Cleaning_Data/week3/week3_quiz.R')
which(agricultureLocal)
head(acs)
source('~/Desktop/School/Coursera/Getting_And_Cleaning_Data/week3/week3_quiz.R')
which(agricultureLocal)
source('~/Desktop/School/Coursera/Getting_And_Cleaning_Data/week3/week3_quiz.R')
head(which(agricultureLocal),head=3)
which(agricultureLocal)[1:3]
source('~/Desktop/School/Coursera/Getting_And_Cleaning_Data/week3/week3_quiz.R')
install.packages("jpeg")
library(jpeg)
img <- read.jpeg("question2.jpg",native=TRUE)
img <- readJPEG("question2.jpg",native=TRUE)
quantile(img,procs=c(.3,.8))
quantile(img,probs=c(.3,.8))
source('~/Desktop/School/Coursera/Getting_And_Cleaning_Data/week3/week3_quiz.R')
library(data.table)
install.packages(data.table)
data.table
install.packages("data.table")
library(data.table)
source('~/Desktop/School/Coursera/Getting_And_Cleaning_Data/week3/week3_quiz.R')
source('~/Desktop/School/Coursera/Getting_And_Cleaning_Data/week3/week3_quiz.R')
source('~/Desktop/School/Coursera/Getting_And_Cleaning_Data/week3/week3_quiz.R')
gdp <- data.table(read.csv("GDP.csv",skip=4,nrows=190))
head(gdp)
summary(gdp)
gdp
table(gdp)
set(gdp,c("X","X.1","X.3","X.4"),c("CountryCode","Rank","Name","GDP"))
gdp <- gdp[,list("X","X.1","X.3","X.4")]
head(gdp)
gdp
gdp <- data.table(read.csv("GDP.csv",skip=4,nrows=190))
gdp <- gdp[,list("X","X.1","X.3","X.4")]
gdp
gdp <- data.table(read.csv("GDP.csv",skip=4,nrows=190))
gdp
gdp$X
gdp_new <- select(gdp,X,X.1,X.3,X.4)
library(dplyr)
gdp_new <- select(gdp,X,X.1,X.3,X.4)
gdp_new
colnames(gdp_new)
colnames(gdp_new,c("CountryCode","Rank","Name","GDP"))
colnames(gdp_new,c("X","X.1","X.3","X.4"),c("CountryCode","Rank","Name","GDP"))
col.names(gdp_new,c("X","X.1","X.3","X.4"),c("CountryCode","Rank","Name","GDP"))
setnames(gdp_new,c("X","X.1","X.3","X.4"),c("CountryCode","Rank","Name","GDP"))
gdp_new <- setnames(gdp_new,c("X","X.1","X.3","X.4"),c("CountryCode","Rank","Name","GDP"))
gdp_new
source('~/Desktop/School/Coursera/Getting_And_Cleaning_Data/week3/week3_quiz.R')
merged_info <- merge(gdp,edInfo,by="CountryCode")
merged_info
nrow(merged_info)
sorted_data <- arrange(merged_info,desc(Rank))
sorted_data[13,Economy]
sorted_data[13]
sorted_data
merged_info
merged_info$Rank
merged_info$Rank[13]
merged_info[13]
merged_info[order(Rank,decreasing = TRUE)]
merged_info[order(Rank,decreasing = TRUE)][13]
arrange(merged_info,desc(Rank))
merged_info <- merge(gdp,edInfo,by="CountryCode")
nrow(merged_info)
sorted_data <- arrange(merged_info,desc(Rank))
sorted_data[13]
sorted_data
sorted_data[,13]
sorted_data[13,]
nrow(merged_info)
sum(!is.na(unique(merged_info$Rank)))
sorted_data$Name[13,]
sorted_data$Name[13]
tappy(merged_info$Rank,merged_info$Income.Group,mean)
tapply(merged_info$Rank,merged_info$Income.Group,mean)
install.packages("Hmisc")
library(Hmisc)
merged_info$RankGroups <- cut2(merged_info$Rank,g=5)
table(merged_info$RankGroups,merged_info$Income.Group)
